{"ast":null,"code":"var _jsxFileName = \"/Users/gracejohnson/my-dashboard/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\n// Replace 'YOUR_HASURA_GRAPHQL_ENDPOINT' and 'YOUR_JWT_TOKEN' with your actual values\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRAPHQL_ENDPOINT = 'https://clean-wasp-50.hasura.app/v1/graphql';\nconst JWT_TOKEN = 'guest';\nconst httpLink = createHttpLink({\n  uri: GRAPHQL_ENDPOINT\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  return {\n    headers: {\n      ...headers,\n      authorization: `Bearer ${JWT_TOKEN}`\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nfunction App() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const handleLogin = token => {\n    // Store the authentication token in local storage\n    localStorage.setItem('token', token);\n    // Update login state\n    setLoggedIn(true);\n  };\n  const handleLogout = () => {\n    // Remove the authentication token from local storage\n    localStorage.removeItem('token');\n    // Update login state\n    setLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: !loggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(MainPage, {\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rumETxDPcQWJcg8a6Y55ZSVDz7g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","jsxDEV","_jsxDEV","GRAPHQL_ENDPOINT","JWT_TOKEN","httpLink","uri","authLink","_","headers","authorization","client","link","concat","cache","App","_s","loggedIn","setLoggedIn","useState","handleLogin","token","localStorage","setItem","handleLogout","removeItem","children","className","Login","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","MainPage","onLogout","_c","$RefreshReg$"],"sources":["/Users/gracejohnson/my-dashboard/src/App.js"],"sourcesContent":["import React from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\n// Replace 'YOUR_HASURA_GRAPHQL_ENDPOINT' and 'YOUR_JWT_TOKEN' with your actual values\nconst GRAPHQL_ENDPOINT = 'https://clean-wasp-50.hasura.app/v1/graphql';\nconst JWT_TOKEN = 'guest';\n\nconst httpLink = createHttpLink({\n  uri: GRAPHQL_ENDPOINT,\n});\n\nconst authLink = setContext((_, { headers }) => {\n  return {\n    headers: {\n      ...headers,\n      authorization: `Bearer ${JWT_TOKEN}`,\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const handleLogin = (token) => {\n    // Store the authentication token in local storage\n    localStorage.setItem('token', token);\n    // Update login state\n    setLoggedIn(true);\n  };\n\n  const handleLogout = () => {\n    // Remove the authentication token from local storage\n    localStorage.removeItem('token');\n    // Update login state\n    setLoggedIn(false);\n  };\n\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"App\">\n        {!loggedIn ? (\n          <Login onLogin={handleLogin} />\n        ) : (\n          <MainPage onLogout={handleLogout} />\n        )}\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,aAAa,EAAEC,cAAc,EAAEC,cAAc,QAAQ,gBAAgB;AAC5F,SAASC,UAAU,QAAQ,6BAA6B;;AAExD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAG,6CAA6C;AACtE,MAAMC,SAAS,GAAG,OAAO;AAEzB,MAAMC,QAAQ,GAAGN,cAAc,CAAC;EAC9BO,GAAG,EAAEH;AACP,CAAC,CAAC;AAEF,MAAMI,QAAQ,GAAGP,UAAU,CAAC,CAACQ,CAAC,EAAE;EAAEC;AAAQ,CAAC,KAAK;EAC9C,OAAO;IACLA,OAAO,EAAE;MACP,GAAGA,OAAO;MACVC,aAAa,EAAG,UAASN,SAAU;IACrC;EACF,CAAC;AACH,CAAC,CAAC;AAEF,MAAMO,MAAM,GAAG,IAAIf,YAAY,CAAC;EAC9BgB,IAAI,EAAEL,QAAQ,CAACM,MAAM,CAACR,QAAQ,CAAC;EAC/BS,KAAK,EAAE,IAAIjB,aAAa,CAAC;AAC3B,CAAC,CAAC;AAEF,SAASkB,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7B;IACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;IACpC;IACAH,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;IAChC;IACAP,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,oBACEhB,OAAA,CAACJ,cAAc;IAACa,MAAM,EAAEA,MAAO;IAAAe,QAAA,eAC7BxB,OAAA;MAAKyB,SAAS,EAAC,KAAK;MAAAD,QAAA,EACjB,CAACT,QAAQ,gBACRf,OAAA,CAAC0B,KAAK;QAACC,OAAO,EAAET;MAAY;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE/B/B,OAAA,CAACgC,QAAQ;QAACC,QAAQ,EAAEX;MAAa;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACpC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAErB;AAACjB,EAAA,CA5BQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}