{"ast":null,"code":"var _jsxFileName = \"/Users/gracejohnson/my-dashboard/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport Login from './components/Login';\nimport MainPage from './components/MainPage';\n\n// Create an ApolloClient instance with authentication headers\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = createHttpLink({\n  uri: 'https://clean-wasp-50.hasura.app/v1/graphql' // Replace with your GraphQL endpoint\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  // Get the authentication token from local storage if it exists\n  const token = localStorage.getItem('token');\n  // Return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nfunction App() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const handleLogin = token => {\n    // Store the authentication token in local storage\n    localStorage.setItem('token', token);\n    // Update login state\n    setLoggedIn(true);\n  };\n  const handleLogout = () => {\n    // Remove the authentication token from local storage\n    localStorage.removeItem('token');\n    // Update login state\n    setLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: !loggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(MainPage, {\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rumETxDPcQWJcg8a6Y55ZSVDz7g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","Login","MainPage","jsxDEV","_jsxDEV","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","App","_s","loggedIn","setLoggedIn","handleLogin","setItem","handleLogout","removeItem","children","className","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","onLogout","_c","$RefreshReg$"],"sources":["/Users/gracejohnson/my-dashboard/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport Login from './components/Login';\nimport MainPage from './components/MainPage';\n\n// Create an ApolloClient instance with authentication headers\nconst httpLink = createHttpLink({\n  uri: 'https://clean-wasp-50.hasura.app/v1/graphql', // Replace with your GraphQL endpoint\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // Get the authentication token from local storage if it exists\n  const token = localStorage.getItem('token');\n  // Return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const handleLogin = (token) => {\n    // Store the authentication token in local storage\n    localStorage.setItem('token', token);\n    // Update login state\n    setLoggedIn(true);\n  };\n\n  const handleLogout = () => {\n    // Remove the authentication token from local storage\n    localStorage.removeItem('token');\n    // Update login state\n    setLoggedIn(false);\n  };\n\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"App\">\n        {!loggedIn ? (\n          <Login onLogin={handleLogin} />\n        ) : (\n          <MainPage onLogout={handleLogout} />\n        )}\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,EAAEC,aAAa,EAAEC,cAAc,EAAEC,cAAc,QAAQ,gBAAgB;AAC5F,SAASC,UAAU,QAAQ,6BAA6B;AACxD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGN,cAAc,CAAC;EAC9BO,GAAG,EAAE,6CAA6C,CAAE;AACtD,CAAC,CAAC;AAEF,MAAMC,QAAQ,GAAGP,UAAU,CAAC,CAACQ,CAAC,EAAE;EAAEC;AAAQ,CAAC,KAAK;EAC9C;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C;EACA,OAAO;IACLH,OAAO,EAAE;MACP,GAAGA,OAAO;MACVI,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAC,GAAG;IAC7C;EACF,CAAC;AACH,CAAC,CAAC;AAEF,MAAMI,MAAM,GAAG,IAAIlB,YAAY,CAAC;EAC9BmB,IAAI,EAAER,QAAQ,CAACS,MAAM,CAACX,QAAQ,CAAC;EAC/BY,KAAK,EAAE,IAAIpB,aAAa,CAAC;AAC3B,CAAC,CAAC;AAEF,SAASqB,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAM2B,WAAW,GAAIZ,KAAK,IAAK;IAC7B;IACAC,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEb,KAAK,CAAC;IACpC;IACAW,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAb,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;IAChC;IACAJ,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,oBACEjB,OAAA,CAACN,cAAc;IAACgB,MAAM,EAAEA,MAAO;IAAAY,QAAA,eAC7BtB,OAAA;MAAKuB,SAAS,EAAC,KAAK;MAAAD,QAAA,EACjB,CAACN,QAAQ,gBACRhB,OAAA,CAACH,KAAK;QAAC2B,OAAO,EAAEN;MAAY;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE/B5B,OAAA,CAACF,QAAQ;QAAC+B,QAAQ,EAAET;MAAa;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACpC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAErB;AAACb,EAAA,CA5BQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}