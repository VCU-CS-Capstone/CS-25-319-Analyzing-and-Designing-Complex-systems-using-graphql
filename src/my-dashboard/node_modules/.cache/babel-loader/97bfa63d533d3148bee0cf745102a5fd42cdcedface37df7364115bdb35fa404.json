{"ast":null,"code":"var _jsxFileName = \"/Users/gracejohnson/my-dashboard/src/App.js\";\nimport React, { useState } from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport Login from './components/Login';\nimport MainPage from './components/MainPage';\n\n// Replace 'YOUR_HASURA_GRAPHQL_ENDPOINT' and 'YOUR_JWT_TOKEN' with your actual values\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRAPHQL_ENDPOINT = 'https://clean-wasp-50.hasura.app/v1/graphql';\nconst JWT_TOKEN = 'guest';\nconst httpLink = createHttpLink({\n  uri: GRAPHQL_ENDPOINT\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  return {\n    headers: {\n      ...headers,\n      authorization: `Bearer ${JWT_TOKEN}`\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(MainPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","Login","MainPage","jsxDEV","_jsxDEV","GRAPHQL_ENDPOINT","JWT_TOKEN","httpLink","uri","authLink","_","headers","authorization","client","link","concat","cache","App","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gracejohnson/my-dashboard/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport Login from './components/Login';\nimport MainPage from './components/MainPage';\n\n// Replace 'YOUR_HASURA_GRAPHQL_ENDPOINT' and 'YOUR_JWT_TOKEN' with your actual values\nconst GRAPHQL_ENDPOINT = 'https://clean-wasp-50.hasura.app/v1/graphql';\nconst JWT_TOKEN = 'guest';\n\nconst httpLink = createHttpLink({\n  uri: GRAPHQL_ENDPOINT,\n});\n\nconst authLink = setContext((_, { headers }) => {\n  return {\n    headers: {\n      ...headers,\n      authorization: `Bearer ${JWT_TOKEN}`,\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n\n\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"App\">\n          <MainPage/>\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,EAAEC,aAAa,EAAEC,cAAc,EAAEC,cAAc,QAAQ,gBAAgB;AAC5F,SAASC,UAAU,QAAQ,6BAA6B;AACxD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAG,6CAA6C;AACtE,MAAMC,SAAS,GAAG,OAAO;AAEzB,MAAMC,QAAQ,GAAGR,cAAc,CAAC;EAC9BS,GAAG,EAAEH;AACP,CAAC,CAAC;AAEF,MAAMI,QAAQ,GAAGT,UAAU,CAAC,CAACU,CAAC,EAAE;EAAEC;AAAQ,CAAC,KAAK;EAC9C,OAAO;IACLA,OAAO,EAAE;MACP,GAAGA,OAAO;MACVC,aAAa,EAAG,UAASN,SAAU;IACrC;EACF,CAAC;AACH,CAAC,CAAC;AAEF,MAAMO,MAAM,GAAG,IAAIjB,YAAY,CAAC;EAC9BkB,IAAI,EAAEL,QAAQ,CAACM,MAAM,CAACR,QAAQ,CAAC;EAC/BS,KAAK,EAAE,IAAInB,aAAa,CAAC;AAC3B,CAAC,CAAC;AAEF,SAASoB,GAAGA,CAAA,EAAG;EAGb,oBACEb,OAAA,CAACN,cAAc;IAACe,MAAM,EAAEA,MAAO;IAAAK,QAAA,eAC7Bd,OAAA;MAAKe,SAAS,EAAC,KAAK;MAAAD,QAAA,eAChBd,OAAA,CAACF,QAAQ;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAErB;AAACC,EAAA,GAVQP,GAAG;AAYZ,eAAeA,GAAG;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}