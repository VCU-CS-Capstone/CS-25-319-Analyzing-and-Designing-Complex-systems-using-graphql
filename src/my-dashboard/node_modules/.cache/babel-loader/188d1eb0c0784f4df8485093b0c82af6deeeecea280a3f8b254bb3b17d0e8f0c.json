{"ast":null,"code":"var _jsxFileName = \"/Users/gracejohnson/my-dashboard/src/components/MainPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\n\n// Define your GraphQL query to fetch tables\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_TABLES = gql`\n  query GetTable2 {\n    Table2 {\n      id\n      bnb_name\n    }\n  }\n`;\nconst MainPage = ({\n  username\n}) => {\n  _s();\n  // Use useQuery hook to execute the GraphQL query\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TABLES);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tables\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.tables.map((table, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: table.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useQuery","gql","jsxDEV","_jsxDEV","GET_TABLES","MainPage","username","_s","loading","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","message","tables","map","table","index","name","_c","$RefreshReg$"],"sources":["/Users/gracejohnson/my-dashboard/src/components/MainPage.js"],"sourcesContent":["import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\n\n// Define your GraphQL query to fetch tables\nconst GET_TABLES = gql`\n  query GetTable2 {\n    Table2 {\n      id\n      bnb_name\n    }\n  }\n`;\n\nconst MainPage = ({ username }) => {\n  // Use useQuery hook to execute the GraphQL query\n  const { loading, error, data } = useQuery(GET_TABLES);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <div>\n      <h2>Welcome, {username}!</h2>\n      <h3>Tables</h3>\n      <ul>\n        {/* Render the tables fetched from the GraphQL query */}\n        {data.tables.map((table, index) => (\n          <li key={index}>{table.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MainPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,QAAQ,gBAAgB;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAGH,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMI,QAAQ,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjC;EACA,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGV,QAAQ,CAACI,UAAU,CAAC;EAErD,IAAII,OAAO,EAAE,oBAAOL,OAAA;IAAAQ,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIN,KAAK,EAAE,oBAAON,OAAA;IAAAQ,QAAA,GAAG,SAAO,EAACF,KAAK,CAACO,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAE/C,oBACEZ,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,GAAI,WAAS,EAACL,QAAQ,EAAC,GAAC;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BZ,OAAA;MAAAQ,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfZ,OAAA;MAAAQ,QAAA,EAEGD,IAAI,CAACO,MAAM,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC5BjB,OAAA;QAAAQ,QAAA,EAAiBQ,KAAK,CAACE;MAAI,GAAlBD,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACR,EAAA,CAnBIF,QAAQ;EAAA,QAEqBL,QAAQ;AAAA;AAAAsB,EAAA,GAFrCjB,QAAQ;AAqBd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}