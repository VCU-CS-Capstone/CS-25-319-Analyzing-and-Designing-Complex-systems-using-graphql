{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anila\\\\capstone\\\\CS-24-314-Graph-QL---Providing-Different-Perspectives\\\\src\\\\my-dashboard\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { ApolloClient, ApolloProvider, HttpLink, InMemoryCache, ApolloLink } from '@apollo/client';\nimport './Dashboard.css';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_DATA = gql`\n  query MyQuery($offset: Int!, $limit: Int!) {\n    Table3(offset: $offset, limit: $limit) {\n      id\n      bnb_name\n      host_id\n      host_name\n      neighborhood_group\n      neighborhood\n      latitude\n      longitude\n      room_type\n      price\n      minimum_nights\n      number_of_reviews\n      last_review\n      reviews_per_month\n      calculated_host_listings_count\n      availability_365\n    }\n    Table3_aggregate {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n`;\n\n// Create the authLink\nconst createAuthLink = (idTokenClaims, roles) => new ApolloLink((operation, forward) => {\n  operation.setContext({\n    headers: {\n      'Content-Type': 'application/json',\n      'x-hasura-role': roles,\n      'Authorization': `Bearer ${idTokenClaims.__raw}`\n    }\n  });\n  return forward(operation);\n});\nconst Dashboard = ({\n  apolloClient\n}) => {\n  _s();\n  const [page, setPage] = useState(1);\n  const limit = 10;\n  const tableRef = useRef(null);\n  const {\n    isAuthenticated,\n    getIdTokenClaims,\n    loginWithRedirect\n  } = useAuth0();\n  const [userRoles, setUserRoles] = useState([]);\n  const {\n    loading,\n    error,\n    data,\n    fetchMore\n  } = useQuery(GET_DATA, {\n    variables: {\n      offset: (page - 1) * limit,\n      limit: limit\n    },\n    client: apolloClient // Pass the Apollo Client instance to useQuery\n  });\n  useEffect(() => {\n    if (!isAuthenticated) {\n      loginWithRedirect();\n    }\n  }, [isAuthenticated, loginWithRedirect]);\n  useEffect(() => {\n    const fetchUserRoles = async () => {\n      try {\n        if (isAuthenticated) {\n          const idTokenClaims = await getIdTokenClaims();\n          const roles = idTokenClaims[\"http://localhost:3000/roles\"].join(',') || [];\n          setUserRoles(roles);\n\n          // Pass roles to Hasura\n          const token = await getIdTokenClaims();\n          const response = await fetch('https://clean-wasp-50.hasura.app/v1/graphql', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'x-hasura-role': roles,\n              'Authorization': `Bearer ${token.__raw}`\n            },\n            body: JSON.stringify({})\n          });\n          if (!response.ok) {\n            throw new Error('Failed to pass roles to Hasura');\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching user roles:', error);\n      }\n    };\n    fetchUserRoles();\n  }, [getIdTokenClaims, isAuthenticated]);\n  useEffect(() => {\n    if (tableRef.current) {\n      tableRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  }, [data]);\n  useEffect(() => {\n    if (page > 1) {\n      fetchMore({\n        variables: {\n          offset: (page - 1) * limit,\n          limit: limit\n        },\n        updateQuery: (prev, {\n          fetchMoreResult\n        }) => {\n          if (!fetchMoreResult) return prev;\n          return {\n            ...prev,\n            Table3: fetchMoreResult.Table3\n          };\n        }\n      });\n    }\n  }, [page, fetchMore, limit]);\n  useEffect(() => {\n    var _data$Table3_aggregat, _data$Table3_aggregat2;\n    if (page < Math.ceil((data === null || data === void 0 ? void 0 : (_data$Table3_aggregat = data.Table3_aggregate) === null || _data$Table3_aggregat === void 0 ? void 0 : (_data$Table3_aggregat2 = _data$Table3_aggregat.aggregate) === null || _data$Table3_aggregat2 === void 0 ? void 0 : _data$Table3_aggregat2.totalCount) / limit)) {\n      fetchMore({\n        variables: {\n          offset: page * limit,\n          limit: limit\n        }\n      });\n    }\n  }, [page, data, fetchMore, limit]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 21\n  }, this);\n  const totalRows = data.Table3_aggregate.aggregate.totalCount;\n  const totalPages = Math.ceil(totalRows / limit);\n  const handlePrevious = () => {\n    setPage(prevPage => Math.max(prevPage - 1, 1));\n  };\n  const handleNext = () => {\n    setPage(prevPage => Math.min(prevPage + 1, totalPages));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\\"Table3\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"data-table\",\n          ref: tableRef,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: data.Table3 && data.Table3.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {}, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevious,\n          disabled: page === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"page-number\",\n          children: `Page ${page} of ${totalPages}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          disabled: page === totalPages,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"1SiDFJuL2KmwaNT1X7ndcs/7k5c=\", false, function () {\n  return [useAuth0, useQuery];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useQuery","gql","ApolloClient","ApolloProvider","HttpLink","InMemoryCache","ApolloLink","useAuth0","jsxDEV","_jsxDEV","GET_DATA","createAuthLink","idTokenClaims","roles","operation","forward","setContext","headers","__raw","Dashboard","apolloClient","_s","page","setPage","limit","tableRef","isAuthenticated","getIdTokenClaims","loginWithRedirect","userRoles","setUserRoles","loading","error","data","fetchMore","variables","offset","client","fetchUserRoles","join","token","response","fetch","method","body","JSON","stringify","ok","Error","console","current","scrollIntoView","behavior","block","updateQuery","prev","fetchMoreResult","Table3","_data$Table3_aggregat","_data$Table3_aggregat2","Math","ceil","Table3_aggregate","aggregate","totalCount","children","fileName","_jsxFileName","lineNumber","columnNumber","message","totalRows","totalPages","handlePrevious","prevPage","max","handleNext","min","className","ref","map","item","id","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/anila/capstone/CS-24-314-Graph-QL---Providing-Different-Perspectives/src/my-dashboard/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { ApolloClient, ApolloProvider, HttpLink, InMemoryCache, ApolloLink } from '@apollo/client';\r\nimport './Dashboard.css';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\nconst GET_DATA = gql`\r\n  query MyQuery($offset: Int!, $limit: Int!) {\r\n    Table3(offset: $offset, limit: $limit) {\r\n      id\r\n      bnb_name\r\n      host_id\r\n      host_name\r\n      neighborhood_group\r\n      neighborhood\r\n      latitude\r\n      longitude\r\n      room_type\r\n      price\r\n      minimum_nights\r\n      number_of_reviews\r\n      last_review\r\n      reviews_per_month\r\n      calculated_host_listings_count\r\n      availability_365\r\n    }\r\n    Table3_aggregate {\r\n      aggregate {\r\n        totalCount: count\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// Create the authLink\r\nconst createAuthLink = (idTokenClaims, roles) => new ApolloLink((operation, forward) => {\r\n  operation.setContext({\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'x-hasura-role': roles,\r\n      'Authorization': `Bearer ${idTokenClaims.__raw}`\r\n    }\r\n  });\r\n  return forward(operation);\r\n});\r\n\r\nconst Dashboard = ({ apolloClient }) => {\r\n  const [page, setPage] = useState(1);\r\n  const limit = 10;\r\n  const tableRef = useRef(null);\r\n  const { isAuthenticated, getIdTokenClaims, loginWithRedirect } = useAuth0();\r\n  const [userRoles, setUserRoles] = useState([]);\r\n\r\n  const { loading, error, data, fetchMore } = useQuery(GET_DATA, {\r\n    variables: {\r\n      offset: (page - 1) * limit,\r\n      limit: limit\r\n    },\r\n    client: apolloClient // Pass the Apollo Client instance to useQuery\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      loginWithRedirect();\r\n    }\r\n  }, [isAuthenticated, loginWithRedirect]);\r\n\r\n  useEffect(() => {\r\n    const fetchUserRoles = async () => {\r\n      try {\r\n        if (isAuthenticated) {\r\n          const idTokenClaims = await getIdTokenClaims();\r\n          const roles = idTokenClaims[\"http://localhost:3000/roles\"].join(',') || [];\r\n          setUserRoles(roles);\r\n\r\n          // Pass roles to Hasura\r\n          const token = await getIdTokenClaims();\r\n          const response = await fetch('https://clean-wasp-50.hasura.app/v1/graphql', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'x-hasura-role': roles,\r\n              'Authorization': `Bearer ${token.__raw}`\r\n            },\r\n            body: JSON.stringify({})\r\n          });\r\n\r\n          if (!response.ok) {\r\n            throw new Error('Failed to pass roles to Hasura');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user roles:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserRoles();\r\n  }, [getIdTokenClaims, isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    if (tableRef.current) {\r\n      tableRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (page > 1) {\r\n      fetchMore({\r\n        variables: {\r\n          offset: (page - 1) * limit,\r\n          limit: limit\r\n        },\r\n        updateQuery: (prev, { fetchMoreResult }) => {\r\n          if (!fetchMoreResult) return prev;\r\n          return {\r\n            ...prev,\r\n            Table3: fetchMoreResult.Table3,\r\n          };\r\n        },\r\n      });\r\n    }\r\n  }, [page, fetchMore, limit]);\r\n\r\n  useEffect(() => {\r\n    if (page < Math.ceil(data?.Table3_aggregate?.aggregate?.totalCount / limit)) {\r\n      fetchMore({\r\n        variables: {\r\n          offset: page * limit,\r\n          limit: limit\r\n        },\r\n      });\r\n    }\r\n  }, [page, data, fetchMore, limit]);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n\r\n  const totalRows = data.Table3_aggregate.aggregate.totalCount;\r\n  const totalPages = Math.ceil(totalRows / limit);\r\n\r\n  const handlePrevious = () => {\r\n    setPage(prevPage => Math.max(prevPage - 1, 1));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setPage(prevPage => Math.min(prevPage + 1, totalPages));\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-container\">\r\n      <div className=\"dashboard-container\">\r\n        <div className=\"dashboard-header\">\r\n          <h2>\"Table3\"</h2>\r\n        </div>\r\n        <div className=\"table-container\">\r\n          <table className=\"data-table\" ref={tableRef}>\r\n            <thead>\r\n              <tr>\r\n                {/* Table headers */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.Table3 && data.Table3.map(item => (\r\n                <tr key={item.id}>\r\n                  {/* Table data */}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"pagination\">\r\n          <button onClick={handlePrevious} disabled={page === 1}>Previous</button>\r\n          <span className=\"page-number\">{`Page ${page} of ${totalPages}`}</span>\r\n          <button onClick={handleNext} disabled={page === totalPages}>Next</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}